#!/bin/bash
# Copyright 2010-2014 Frank Liepold /  1&1 Internet AG
#
# Email: frank.liepold@1und1.de
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

#####################################################################

## path to your use case of the test suite.
## You *must* set this variable.
## This directory contains user specific sources and configurations and must
## be a subdirectory of $main_base_directory.
global_user_dir=$main_base_directory/mars

## directory of your modules
global_user_module_dir=$global_user_dir/modules

## hosts the tests are running on. The first host is initially always used as
## primary host
global_host_list=(${MARS_INITIAL_PRIMARY_HOST:-"istore-test-bs7"} ${MARS_INITIAL_SECONDARY_HOST:-"istore-test-bap7"})

## if global_host_list is changed in a *.conf file we need to recompute the
## values of all dependent globals.
function global_set_globals_depending_on_global_host_list
{
    eval main_lock_file_list=($(for h in "${global_host_list[@]}";do printf "[$h]=/tmp/test-suite_on.$h ";done))

    # see default-cluster.conf
    # we construct the expression cluster_mars_dir_lv_name_list=([host-1]=$cluster_mars_dir_lv [host-2]=$cluster_mars_dir_lv ...)
    if declare -p cluster_mars_dir_lv_name_list  2>/dev/null |\
       grep 'declare -A' >/dev/null
    then 
        eval cluster_mars_dir_lv_name_list=($(x=(${global_host_list[@]/#/[}); y=(${x[@]/%/]=$cluster_mars_dir_lv}); echo ${y[@]}))
    fi
}

global_set_globals_depending_on_global_host_list

## host indexed list of bootloaders. In case of lilo we check after installing
## a kernel, that the label given in global_host_bootloader_label_list exists
## in /etc/lilo.conf and call lilo -R <label>. For all other bootloaders we do
## nothing. It's your responsibility to boot the correct kernel.
declare -g -A global_host_bootloader_list
global_host_bootloader_list=(\
	[istore-test-bs7]=grub \
	[istore-test-bap7]=lilo \
	[istore-test-bs4]=lilo \
	[istore-test-bap4]=lilo \
	[istore-test-bs2]=lilo \
	[ovzd-test-bs1]=grub \
	[ovzd-test-bap1]=grub \
    )

declare -g -A global_host_bootloader_label_list
global_host_bootloader_label_list=(\
	[istore-test-bs7]=no_label \
	[istore-test-bap7]=mars \
	[istore-test-bs4]=mars \
	[istore-test-bap4]=mars \
	[istore-test-bs2]=mars \
	[ovzd-test-bs1]=no_label \
	[ovzd-test-bap1]=no_label \
    )

global_mars_directory="/mars"

## filesystem type of /mars
global_mars_fs_type="ext4"

## egrep patterns to check for messsage categories
global_mars_errmsg_prefix='(XIO|MARS)_error'
global_mars_wrnmsg_prefix='(XIO|MARS)_warn'

## egrep pattern for error messages which are likely to appear only in
## lib_err_total_log_file (5.total.log)
global_errors_only_in_total_log_pattern='[A-Z]_error|MEM_[^i]|[?!xyz][?!xyz][?!xyz][?!xyz][?!xyz][?!xyz][?!xyz]+'

## to be able to kill all scripts started on a remote host these scripts
## must have a fixed pattern in their name
global_prefix_scripts='MARS-TEST-SCRIPT'

## results of checks of symlinks
declare -g -A global_link_status
global_link_status=(["link_ok"]=0 ["link_does_not_exist"]=1 \
                  ["link_has_wrong_value"]=2)

## function called in lib_exit to run general checks (e.g. for kernel stacks
## caused by a test case)
lib_general_checks_after_every_test_function=lib_general_mars_checks_after_every_test

